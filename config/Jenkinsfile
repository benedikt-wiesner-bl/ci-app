pipeline {
    agent any

    environment {
        DOCKER_COMPOSE = "docker-compose -f config/docker-compose.yml"
        IMAGE_NAME = "ci-app:latest"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: 'git@github.com:benedikt-wiesner-bl/ci-app.git',
                    credentialsId: 'github-ci-key'
            }
        }

        stage('Build Docker Image') {
            steps {
                dir("${env.WORKSPACE}") {
                    sh 'docker build -t $IMAGE_NAME -f infrastructure/Dockerfile .'
                }
            }
        }

        stage('Run Tests') {
            steps {
                sh 'docker run --rm $IMAGE_NAME pytest -q'
            }
        }

        stage('Security Scan with Trivy') {
            steps {
                // Bricht ab, wenn HIGH/CRITICAL CVEs gefunden werden
                sh '''
                docker run --rm \
                  -v /var/run/docker.sock:/var/run/docker.sock \
                  -v $WORKSPACE:/workspace \
                  aquasec/trivy:latest image \
                  --exit-code 1 \
                  --severity HIGH,CRITICAL \
                  --format table \
                  $IMAGE_NAME
                '''

                // Zusätzlich JSON-Report speichern
                sh '''
                docker run --rm \
                  -v /var/run/docker.sock:/var/run/docker.sock \
                  -v $WORKSPACE:/workspace \
                  aquasec/trivy:latest image \
                  --format json \
                  --output trivy-report.json \
                  $IMAGE_NAME
                '''
            }
        }

        stage('Deploy (only ci-app)') {
            steps {
                sh '''
                    $DOCKER_COMPOSE stop ci-app || true
                    $DOCKER_COMPOSE rm -f ci-app || true
                    $DOCKER_COMPOSE build ci-app
                    docker ps -q --filter "publish=5001" | xargs -r docker stop
                    $DOCKER_COMPOSE up -d ci-app
                '''
            }
        }
    }

    post {
        always {
            sh 'docker ps -a'
            archiveArtifacts artifacts: 'trivy-report.json', fingerprint: true
        }
        success {
            echo "✅ Deployment erfolgreich!"
        }
        failure {
            echo "❌ Deployment fehlgeschlagen!"
        }
    }
}
